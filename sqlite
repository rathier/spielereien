#!/usr/bin/env bash

SQLITE=/usr/bin/sqlite3
DATABASE=~/dbase.db

# sqlite
### example from http://quickies.andreaolivato.net/post/133473114/using-sqlite3-in-bash
# Defining my database first table
STRUCTURE="CREATE TABLE data (id INTEGER PRIMARY KEY,name TEXT,value TEXT);";

# Creating an Empty db file and filling it with my structure
cat /dev/null > ${DATABASE}
echo ${STRUCTURE} > /tmp/tmpstructure
${SQLITE} ${DATABASE} < /tmp/tmpstructure;
rm -f /tmp/tmpstructure;

# Inserting some data into my structure
${SQLITE} ${DATABASE} "INSERT INTO data (name,value) VALUES ('MyName','MyValue')";
${SQLITE} ${DATABASE} "INSERT INTO data (name,value) VALUES ('MyOtherName','MyOtherValue')";

# Getting my data
LIST=`${SQLITE} ${DATABASE} "SELECT * FROM data WHERE 1"`;

# For each row
for ROW in ${LIST}; do
    # Parsing data (sqlite3 returns a pipe separated string)
    Id=`echo ${ROW} | awk '{split($0,a,"|"); print a[1]}'`
    Name=`echo ${ROW} | awk '{split($0,a,"|"); print a[2]}'`
    Value=`echo ${ROW} | awk '{split($0,a,"|"); print a[3]}'`
    # Printing my data
    echo -e "${Id}) "${Name}" -> "${Value};
done

